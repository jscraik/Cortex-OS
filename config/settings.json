{
  "workbench.colorTheme": "MacOS Modern Dark - Xcode Modern",
  "workbench.preferredHighContrastColorTheme": "MacOS Modern Dark - Xcode Civic",
  "workbench.fontAliasing": "antialiased",
  "workbench.list.fastScrollSensitivity": 5,
  "workbench.productIconTheme": "macos-modern",
  "workbench.iconTheme": "material-icon-theme",
  "editor.accessibilitySupport": "off",
  "editor.accessibilityPageSize": 16,
  "editor.fontSize": 16,
  "editor.lineHeight": 24,
  "editor.fontFamily": "Fira Code Retina, JetBrains Mono, 'Source Code Pro', monospace",
  "editor.fontLigatures": true,
  "editor.wordWrap": "on",
  "editor.formatOnSave": true,
  "editor.renderWhitespace": "all",
  "editor.renderControlCharacters": true,
  "editor.renderLineHighlight": "gutter",
  "editor.cursorBlinking": "smooth",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 30000,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.fixAll.biome": "explicit",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit",
    "source.organizeImports.biome": "explicit"
  },
  "editor.defaultFormatter": "biomejs.biome",
  "prettier.requireConfig": true,
  "prettier.experimentalTernaries": true,
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "[typescript]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[javascript]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[json]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.markdownlint": "explicit"
    }
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-containers",
    "editor.codeActionsOnSave": {
      "source.fixAll.hadolint": "explicit"
    }
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "docker.docker",
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit"
    }
  },
  "hadolint.hadolintPath": "hadolint",
  "security.workspace.trust.untrustedFiles": "open",
  "markdownlint.config": {
    "default": true
  },
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.validate.enable": true,
  "typescript.suggest.autoImports": false,
  "typescript.updateImportsOnFileMove.enabled": "never",
  "typescript.preferences.includePackageJsonAutoImports": "off",
  "typescript.tsserver.experimental.enableProjectDiagnostics": false,
  "typescript.tsserver.maxTsServerMemory": 8192,
  "typescript.preferences.useLabelDetailsInCompletionEntries": false,
  "typescript.suggest.completeFunctionCalls": false,
  "typescript.disableAutomaticTypeAcquisition": true,
  "typescript.surveys.enabled": false,
  "javascript.validate.enable": false,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },
  "eslint.enable": true,
  "eslint.run": "onSave",
  "eslint.validate": [
    "typescript",
    "typescriptreact"
  ],
  "files.associations": {
    "turbo.json": "json"
  },
  "files.exclude": {
    "**/node_modules": true,
    "**/.next": true,
    "**/__pycache__": true,
    "**/dist": true,
    "**/.turbo": true,
    "**/.vitest": true,
    "**/coverage": true,
    "**/mcp-servers/": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/*.sqlite": false,
    "**/cortex-*.sqlite": false
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/coverage": true,
    "**/mcp-servers/": true,
    "**/bower_components": true,
    "**/.turbo": true,
    "**/.next": true,
    "**/dist": true
  },
  "files.watcherExclude": {
    "**/mcp-servers/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.turbo/**": true,
    "**/dist/**": true
  },
  "files.autoGuessEncoding": true,
  "git.autofetch": true,
  "git.autofetchPeriod": 180,
  "git.enableSmartCommit": true,
  "git.postCommitCommand": "push",
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "never",
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.createEnvironment.trigger": "off",
  "python.autoComplete.extraPaths": [],
  "python.analysis.typeCheckingMode": "strict",
  "python.analysis.addHoverSummaries": true,
  "python.defaultInterpreterPath": "./venv/bin/python",
  "python.linting.enabled": true,
  "python.linting.ruffEnabled": true,
  "python.formatting.provider": "none",
  "terminal.integrated.fontFamily": "JetBrains Mono, monospace",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.gpuAcceleration": "auto",
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.persistentSessionReviveProcess": "onExit",
  "terminal.explorerKind": "both",
  "terminal.integrated.accessibleViewFocusOnCommandExecution": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.enableImages": true,
  "terminal.integrated.enableVisualBell": true,
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.stickyScroll.enabled": true,
  "terminal.integrated.suggest.enabled": true,
  "terminal.integrated.tabs.defaultColor": "terminal.ansiGreen",
  "terminal.integrated.copilotChat.enabled": true,
  "github-actions.remote-name": "main",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.ai.model": "openai:gpt-4",
  "gitlens.gitCommands.skipConfirmations": [
    "fetch:command",
    "push:command"
  ],
  "gitlens.launchpad.indicator.enabled": false,
  "gitlens.views.repositories.showIncomingActivity": true,
  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": "\\.(js|ts|jsx|tsx|py|md)$",
        "cmd": "git add ${file} && git commit -m 'Auto-save: ${fileBasename}' || true"
      }
    ]
  },
  "keybindings.shortcuts": [
    {
      "key": "cmd+alt+m",
      "command": "workbench.action.tasks.runTask",
      "args": "memory:clean"
    },
    {
      "key": "cmd+alt+shift+m",
      "command": "workbench.action.tasks.runTask",
      "args": "memory:clean:dry-run"
    },
    {
      "key": "cmd+alt+ctrl+m",
      "command": "workbench.action.tasks.runTask",
      "args": "memory:clean"
    },
    {
      "key": "cmd+alt+ctrl+shift+m",
      "command": "workbench.action.tasks.runTask",
      "args": "memory:clean:dry-run"
    }
  ],
  "material-icon-theme.enableLogging": true,
  "material-icon-theme.opacity": 1,
  "material-icon-theme.folders.theme": "specific",
  "material-icon-theme.folders.color": "#42a5f5",
  "material-icon-theme.files.color": "#42a5f5",
  "material-icon-theme.activeIconPack": "none",
  "material-icon-theme.hidesExplorerArrows": false,
  "material-icon-theme.files.associations": {
    "RULES_OF_AI.md": "lock",
    "AGENTS.md": "robot",
    "ai-partnership.md": "robot",
    "copilot-instructions.md": "copilot",
    "registry.yml": "settings",
    "model-config.json": "ai",
    "model-config.yaml": "ai",
    "model-config.yml": "ai",
    ".aiexclude": "Gemini-ai",
    "mcp.json": "robot",
    ".mcp.json": "robot",
    ".mcp.config.json": "robot",
    "*.chatmode.md": "copilot",
    "*.prompt.md": "copilot",
    "*.instructions.md": "copilot",
    "cursor-rules": "robot",
    ".cursor": "robot",
    ".windsurfrules": "robot",
    "generate-prp.chatmode.md": "copilot",
    "brainwav-mentor.chatmode.md": "copilot",
    "4.1-Beast.chatmode.md": "copilot",
    "ai-code-review.prompt.md": "copilot",
    "generate-prp.prompt.md": "copilot",
    "system-prompt.md": "copilot",
    "copilot-testGeneration.instructions.md": "copilot",
    "copilot-markdown.instructions.md": "copilot",
    "copilot-commitMessage.instructions.md": "copilot",
    "copilot-codeReview.instructions.md": "copilot",
    "copilot-pullRequest.instructions.md": "copilot",
    "memory.instructions.md": "copilot",
    "copilot-qualityGates.instructions.md": "copilot",
    ".pre-commit-config.yaml": "deprecated",
    ".pre-commit-hooks.yaml": "deprecated",
    "pre-commit-config.yaml": "deprecated",
    "cortex-config.json": "settings",
    "cortex-config.yaml": "settings",
    "cortex-config.yml": "settings",
    "cortex-claude-code-router.json": "robot",
    "cortex-claude-code-router.example.json": "robot",
    "coordination-engine.log": "log",
    "python-agent-bridge.log": "log",
    "cross-lang-sync-report.json": "json",
    "dependency-*.json": "package",
    "bloat-cleanup-report.json": "json",
    "security-*.json": "lock",
    "license-*.json": "license",
    "terminal-tool-license-compliance-report.json": "license",
    "sbom.spdx.json": "license",
    "*.prp.md": "document",
    "*.spec.md": "document",
    "GEMINI.md": "ai",
    "CLAUDE.md": "ai",
    "context-prime.md": "document",
    "CORTEX_OS_AUDIT_REPORT.md": "document",
    "ISSUE_*_RESOLUTION.md": "document",
    "*_COMPLETE.md": "document",
    "*_REPORT.md": "document",
    "ADAPTER_SURFACE.md": "document",
    "DEVELOPMENT.md": "document",
    "PLAN.md": "document",
    "SUMMARY.md": "document",
    "INITIAL.md": "document",
    "PR_CHECKLIST.md": "document",
    "DEPRECATION_WRAPPERS.md": "document",
    "TDD_MIGRATION_FRAMEWORK.md": "document",
    "VULNERABILITY_REMEDIATION_COMPLETE.md": "lock",
    "PERFORMANCE_OPTIMIZATION_REPORT.md": "document",
    "DEVELOPMENT_WORKFLOW_IMPROVEMENTS_REPORT.md": "document",
    "PHASE45_IMPLEMENTATION_SUMMARY.md": "document",
    "*.sqlite": "database",
    "*.sqlite3": "database",
    "*.db": "database",
    "*.lance": "database",
    "cortex-ai.sqlite": "database",
    "ai.sqlite": "database",
    "default.sqlite": "database",
    "*.brainstore": "database",
    "turbo.json": "settings",
    "vitest.config.ts": "test-ts",
    "vitest.config.js": "test-js",
    "vitest.*.config.ts": "test-ts",
    "vitest.*.config.js": "test-js",
    "playwright.config.ts": "test-ts",
    "playwright.config.js": "test-js",
    ".pa11yci.json": "test",
    ".lighthouserc.js": "test",
    "jest.config.js": "test-js",
    "jest.config.ts": "test-ts",
    "babel.config.js": "babel",
    "dprint.json": "settings",
    "sonar-project.properties": "settings",
    "pnpm-workspace.yaml": "pnpm",
    "pnpm-lock.yaml": "pnpm",
    "pnpm-allow-builds.json": "pnpm",
    "release-please-config.json": "settings",
    ".release-please-manifest.json": "settings",
    "mkdocs.yml": "settings",
    "eslint.config.js": "eslint",
    ".eslintrc*": "eslint",
    ".prettierignore": "prettier",
    ".prettierrc*": "prettier",
    ".lycheeignore": "settings",
    ".snyk": "lock",
    ".semgrep.yaml": "lock",
    "tech-stack-preferences.md": "document",
    "personas.json": "json",
    "devops.plan.json": "json",
    "devops.plan.schema.json": "json",
    "tdd.plan.json": "json",
    "MigrationPlan.json": "json",
    "initial.yaml": "yaml",
    ".env*": "tune",
    ".env.template": "tune",
    ".env.carbon": "tune",
    ".env.local": "tune",
    ".gitmodules": "git",
    ".gitignore": "git",
    ".commitlintrc.cjs": "settings",
    ".lintstagedrc.js": "settings",
    ".markdownlint.json": "settings",
    "ci.patch": "git",
    "git_plan.sh": "git",
    ".project-structure.json": "json",
    "demo_sample_prp.json": "json",
    "test.json": "json",
    "header-errors.log": "log",
    "*.log": "log",
    "pr_body.txt": "text",
    "tmp_text.txt": "text",
    "tmp_truth.json": "json",
    "demo-output.txt": "text",
    "marketplace-demo-output.txt": "text",
    "project-scan-results.json": "json",
    "*.prompt": "copilot",
    "*.chatmode": "copilot",
    "*.gemini": "ai",
    "*.claude": "ai",
    "*.mcp": "robot",
    "mlxclaude": "ai",
    "Dockerfile*": "docker",
    "docker-compose*.yml": "docker",
    "docker-compose*.yaml": "docker",
    "Containerfile*": "docker",
    ".dockerignore": "docker",
    "requirements*.txt": "python",
    "requirements*.txt.bak": "python",
    "pyproject.toml": "python",
    "setup.py": "python",
    "setup.cfg": "python",
    "package*.json": "nodejs",
    "package*.json.bak": "nodejs",
    "tsconfig.json": "tsconfig",
    "tsconfig*.json": "tsconfig",
    "SECURITY.md": "lock",
    "CONTRIBUTING.md": "document",
    "CHANGELOG.md": "changelog",
    "README*.md": "document",
    "README*.md.bak": "document",
    "accessibility_ethical_ai.html": "document",
    "__init__.html": "html",
    "voice-demo.html": "html",
    "*.plugin.ts": "plugin",
    "gpu-monitor.plugin.ts": "plugin",
    "thermal-guard.plugin.ts": "plugin",
    ".ai": "robot",
    "agents": "robot",
    "models": "ai",
    "ml": "ai",
    "deep-learning": "ai",
    "neural-networks": "ai",
    "llm": "ai",
    "llms": "ai",
    "embeddings": "ai",
    "vectors": "ai",
    "mcp": "robot",
    ".mcp": "robot",
    "mcp_tools": "robot",
    "pytorch": "pytorch",
    "torch": "pytorch",
    "tensorflow": "ai",
    "keras": "ai",
    "transformers": "ai",
    "huggingface": "ai",
    "cortex-instructions": "robot",
    "cortex-prompts": "robot",
    "cortex-specs": "document",
    "cortex-scripts": "tools",
    "cortex-rules": "rules",
    "cortex-standards": "document",
    "cortex-templates": "template",
    "cortex-brainstore": "database",
    "cortex-os": "app",
    "cortex-cli": "command",
    "cortex-py": "python",
    "cortex-ts": "typescript",
    "cortex-ios": "mobile",
    "cortex-cli-ui": "ui",
    "cortex-os-prp-framework": "document",
    "instructions": "robot",
    "prompts": "robot",
    "prp": "document",
    "PRPs": "document",
    "specs": "document",
    "standards": "document",
    "templates": "template",
    "brainstore": "database",
    "memory": "database",
    "bridge": "api",
    "_inbox": "temp",
    "CONTEXT": "document",
    "apps": "app",
    "api": "api",
    "web": "app",
    "vscode-extension": "vscode",
    "asbr-dashboard": "dashboard",
    "asbr-monitor": "monitoring",
    "asbr-portal": "app",
    "bun-react": "react",
    "docs-api": "docs",
    "packages": "lib",
    "a2a": "api",
    "a2a-protocol": "api",
    "accessibility": "rules",
    "agents-docgen": "robot",
    "asbr": "api",
    "asbr-ui": "ui",
    "avaturl": "lib",
    "brainwav-agents": "robot",
    "brainwav-api": "api",
    "brainwav-memory": "database",
    "brainwav-ui": "ui",
    "carbon-monitoring": "monitoring",
    "chatterbox-tts": "audio",
    "cli-tools": "command",
    "component-docs": "docs",
    "cortex-core": "core",
    "create-cortex-app": "template",
    "datamax": "database",
    "dependency-management": "package",
    "evidence-validator": "test",
    "ingest-marker": "database",
    "license-scanner": "license",
    "model-templates": "template",
    "openai-anthropic-middleware": "api",
    "orchestration": "api",
    "orchestration-analytics": "analytics",
    "python-agents": "python",
    "repo-guardrails": "rules",
    "retrieval-layer": "database",
    "sakura": "lib",
    "sdk": "lib",
    "security": "lock",
    "security-atlas": "lock",
    "security-file-validation": "lock",
    "slash-commands": "command",
    "stage-schemas": "json",
    "struct-scan": "tools",
    "telemetry": "analytics",
    "testing": "test",
    "ui": "ui",
    "ui-components": "ui",
    "ui2code": "ui",
    "utils": "tools",
    "yt-safe-downloader": "download",
    "data": "database",
    "datasets": "database",
    "cache": "temp",
    "logs": "log",
    "performance-logs": "log",
    "backups": "archive",
    ":memory:": "database",
    "infra": "server",
    "terraform": "server",
    "k8s": "kubernetes",
    "kubernetes": "kubernetes",
    "deploy": "server",
    "devops": "server",
    "monitoring": "monitoring",
    "nginx": "server",
    "server": "server",
    "services": "api",
    "notebooks": "jupyter",
    "jupyter": "jupyter",
    "tests": "test",
    "test": "test",
    "__tests__": "test",
    "test-data": "test",
    "test-results": "test",
    "test-stubs": "test",
    ".devcontainer": "container",
    ".husky": "git",
    ".changeset": "git",
    ".claude": "ai",
    ".superdesign": "ui",
    ".gemini": "ai",
    "playwright-report": "test",
    ".coverage": "test",
    "node_modules": "node",
    "examples": "examples",
    "snapshots": "test",
    "out": "build",
    "docs": "docs",
    "docs-built": "docs",
    "docs-generated": "docs",
    "project-documentation": "docs",
    "resources": "docs",
    "legal-notifications": "license",
    "runbooks": "docs",
    "reviews": "docs",
    "migration-specs": "docs",
    "reports": "docs",
    "common": "shared",
    "shared": "shared",
    "lib": "lib",
    "vendor": "lib",
    "ext": "lib",
    "bin": "scripts",
    "cli": "command",
    "config": "config",
    "rules": "rules",
    "scripts": "tools",
    "tools": "tools",
    "plugins": "plugin",
    ".github": "github",
    ".vscode": "vscode",
    ".cortex": "app",
    ".cortex-os": "app",
    ".turbo": "turbo",
    ".neo4j_data": "database",
    ".qdrant_data": "database",
    "provenance": "database",
    "schemas": "json",
    "dist": "build",
    "site": "build",
    "uploads": "upload",
    "downloads": "download",
    "tmp": "temp",
    "term-code-temp": "temp",
    "personas": "robot",
    "voice": "audio",
    "issues": "bug",
    "ide": "vscode",
    "types": "typescript"
  },
  "accessibility.signals.codeActionApplied": {
    "sound": "off"
  },
  "accessibility.signals.chatEditModifiedFile": {
    "sound": "off"
  },
  "accessibility.signals.chatRequestSent": {
    "sound": "off"
  },
  "accessibility.signals.clear": {
    "sound": "off"
  },
  "accessibility.signals.codeActionTriggered": {
    "sound": "off"
  },
  "accessibility.signals.diffLineDeleted": {
    "sound": "off"
  },
  "accessibility.signals.diffLineInserted": {
    "sound": "off"
  },
  "accessibility.signals.diffLineModified": {
    "sound": "off"
  },
  "accessibility.signals.editsKept": {
    "sound": "off"
  },
  "accessibility.signals.terminalBell": {
    "sound": "off"
  },
  "accessibility.hideAccessibleView": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  "github.copilot.updateChannel": "Insiders",
  "github.copilot.selectedCompletionModel": "gpt-4",
  "github.copilot.chat.useWorkspace": true,
  "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.chat.agent.autoFix": true,
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.chat.alternateGptPrompt": true,
  "github.copilot.chat.completionContext.typescript.mode": "on",
  "github.copilot.chat.editor.temporalContext.enabled": true,
  "github.copilot.chat.edits.temporalContext.enabled": true,
  "github.copilot.chat.generateTests.codeLens": true,
  "github.copilot.chat.languageContext.fix.typescript.enabled": true,
  "github.copilot.chat.languageContext.inline.typescript.enabled": true,
  "github.copilot.chat.languageContext.typescript.enabled": true,
  "github.copilot.chat.newWorkspace.useContext7": true,
  "terminal.integrated.commandsToSkipShell": [
    "editor.action.accessibilityHelp",
    "editor.action.toggleTabFocusMode",
    "notification.acceptPrimaryAction",
    "notifications.hideList",
    "notifications.hideToasts",
    "workbench.action.quickOpen",
    "workbench.action.showCommands",
    "workbench.action.quickOpenView",
    "workbench.action.closeQuickOpen",
    "workbench.action.navigateBack",
    "workbench.action.navigateForward",
    "workbench.action.showAllSymbols",
    "editor.action.insertCursorAbove",
    "editor.action.insertCursorBelow",
    "editor.action.selectHighlights",
    "workbench.action.files.newUntitledFile",
    "workbench.action.quickOpenRecent",
    "actions.find",
    "editor.action.startFindReplaceAction"
  ],
  "redhat.telemetry.enabled": false,
  "docker.extension.enableComposeLanguageServer": true,
  "docker.commands.build": "--pull",
  "chat.tools.terminal": {
    "autoApprove": true
  },
  "chat.agent.maxRequests": 500,
  "githubPullRequests.experimental.useQuickChat": true,
  "githubPullRequests.pullBranch": "never",
  "githubPullRequests.codingAgent.uiIntegration": true,
  "cSpell.userWords": [
    "actioned",
    "Agentic",
    "aiexclude",
    "apify",
    "ASBR",
    "autofetch",
    "autogeneration",
    "avaturl",
    "axios",
    "bmad",
    "brainstore",
    "brainwav",
    "charliermarsh",
    "chatmode",
    "chatmodes",
    "Codacy",
    "codesearch",
    "commitlintrc",
    "Containerfile",
    "Craik",
    "datamax",
    "Dependi",
    "dependi",
    "describedby",
    "dockercompose",
    "Dockerized",
    "dotenv",
    "emeraldwalk",
    "esbenp",
    "eslintcache",
    "Fira",
    "frontmatter",
    "ghsa",
    "gitmodules",
    "huggingface",
    "jamiescottcraik",
    "keras",
    "lighthouserc",
    "lintstagedrc",
    "llms",
    "lycheeignore",
    "mkdocs",
    "mlxclaude",
    "mypy",
    "Ollama",
    "passlib",
    "pipefail",
    "pycache",
    "pyproject",
    "pytest",
    "qdrant",
    "Qwen",
    "runbooks",
    "runonsave",
    "sakura",
    "Sandboxed",
    "SARIF",
    "scrollback",
    "semgrep",
    "Smol",
    "sonarlint",
    "sonarcloud",
    "Summarise",
    "superdesign",
    "TURBOREPO",
    "vitest",
    "WCAG",
    "windsurfrules",
    "worktree",
    "worktrees"
  ],
  "sonarlint.connectedMode.project": {
    "connectionId": "jamiescottcraik",
    "projectKey": "jamiescottcraik_cortex-os"
  },
  "nxConsole.generateAiAgentRules": true,
  "dependi.apiKey": "bf6e1e6b-564b-4f6a-af14-bd2f9195c5b9",
  "dependi.vulnerability.enabled": true,
  "dependi.vulnerability.ghsa.enabled": true,
  "dependi.rust.enabled": true,
  "dependi.rust.lockFileEnabled": true,
  "dependi.npm.enabled": true,
  "dependi.npm.lockFileEnabled": true,
  "dependi.go.enabled": true,
  "dependi.python.enabled": true,
  "dependi.python.lockFileEnabled": true,
  "dependi.php.enabled": true,
  "dependi.php.lockFileEnabled": true,
  "dependi.dart.enabled": true,
  "dependi.dart.lockFileEnabled": true,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.settings.applyToAllProfiles": [],
  "yaml.maxItemsComputed": 7000,
  "workbench.list.smoothScrolling": true,
  "chat.todoListTool.enabled": true,
  "workbench.commandPalette.experimental.suggestCommands": true,
  "workbench.experimental.cloudChanges.autoStore": "onShutdown",
  "workbench.experimental.share.enabled": true,
  "diffEditor.experimental.showMoves": true,
  "remoteHub.experimental.syncRecentList": true,
  "remoteHub.experimental.useDiffMatchPatch": true,
  "reactSnippets.settings.prettierEnabled": true,
  "markdown.extension.syntax.plainTheme": true,
  "markdown.extension.theming.decoration.renderLink": true,
  "markdown.extension.theming.decoration.renderHardLineBreak": true,
  "markdown.extension.theming.decoration.renderParagraph": true,
  "npm-intellisense.packageSubfoldersIntellisense": true,
  "chat.mcp.enabled": true,
  "chat.agentSessionsViewLocation": "showChatsMenu",
  "chat.mcp.assisted.nuget.enabled": true,
  "chat.mcp.serverSampling": {
    "Global in Code: apify": {
      "allowedModels": [
        "copilot/gpt-5-mini"
      ]
    }
  },
  "sonarlint.connectedMode.connections.sonarcloud": [
    {
      "organizationKey": "jamiescottcraik",
      "connectionId": "jamiescottcraik",
      "region": "EU"
    }
  ],
  "sonarlint.focusOnNewCode": true,
  "cSpell.blockCheckingWhenAverageChunkSizeGreaterThan": 120,
  "cSpell.useLocallyInstalledCSpell": true,
  "cSpell.logLevel": "Warning",
  "cSpell.showStatus": false,
  "cSpell.enabled": true,
  "cSpell.import": [],
  "cSpell.diagnosticLevel": "Information",
  "cSpell.showSuggestions": true,
  "cSpell.suggestionMenuType": "quickPick",
  "cSpell.ignorePaths": [
    "node_modules/**",
    "dist/**",
    "build/**",
    "coverage/**",
    "*.min.js",
    "*.map",
    "package-lock.json",
    "pnpm-lock.yaml",
    ".git/**"
  ],
  "githubPullRequests.codingAgent.promptForConfirmation": false,
  "chat.editing.confirmEditRequestRemoval": false,
  "github.copilot.chat.scopeSelection": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "chatgpt.openOnStartup": true,
  "extensions.experimental.deferredStartupFinishedActivation": true,
  "extensions.ignoreRecommendations": true,
  "extensions.supportNodeGlobalNavigator": true,
  "remote.downloadExtensionsLocally": true,
  "extensions.disabled": [
    "github.copilot-chat",
    "nrwl.angular-console"
  ],
  "typescript.tsserver.pluginPaths": [],
  "extensions.disabled": [
    "nrwl.angular-console"
  ]
}
