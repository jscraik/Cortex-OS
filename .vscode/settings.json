{
  // --- APPEARANCE & THEME (ACCESSIBILITY PRIORITY) --------------------------
  "workbench.colorTheme": "MacOS Modern Dark - Xcode Modern",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.preferredHighContrastColorTheme": "MacOS Modern Dark - Xcode Civic",
  "workbench.fontAliasing": "antialiased",
  "workbench.list.fastScrollSensitivity": 5,
  "workbench.productIconTheme": "macos-modern",
  // --- EDITOR BEHAVIOR & FONT (ACCESSIBILITY OPTIMIZED) --------------------
  "editor.accessibilitySupport": "off",
  "editor.accessibilityPageSize": 16,
  "editor.fontSize": 16,
  "editor.lineHeight": 24,
  "editor.fontFamily": "Fira Code Retina, JetBrains Mono, 'Source Code Pro', monospace",
  "editor.fontLigatures": true,
  "editor.wordWrap": "on",
  "editor.formatOnSave": true,
  "editor.renderWhitespace": "all",
  "editor.renderControlCharacters": true,
  "editor.renderLineHighlight": "gutter",
  "editor.cursorBlinking": "smooth",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.defaultFormatter": "biomejs.biome",
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit",
    "source.organizeImports.biome": "explicit"
  },
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  // --- FILE AUTO-SAVE SETTINGS ----------------------------------------------
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 30000,
  "files.autoGuessEncoding": true,
  "files.eol": "\n",
  // --- CODE ACTIONS & FORMATTING --------------------------------------------
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-containers",
    "editor.codeActionsOnSave": {
      "source.fixAll.hadolint": "explicit"
    }
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit"
    }
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.codeActionsOnSave": {
      "source.organizeImports.biome": "never"
    }
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml",
    "editor.codeActionsOnSave": {
      "source.organizeImports.biome": "never"
    }
  },
  // --- SECURITY SETTINGS ----------------------------------------------------
  "security.workspace.trust.enabled": false,
  "security.workspace.trust.untrustedFiles": "open",
  "security.workspace.trust.emptyWindow": "open",
  "markdownlint.config": {
    "default": true
  },
  // --- TYPESCRIPT & JAVASCRIPT STACK ----------------------------------------
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.validate.enable": true,
  "typescript.suggest.autoImports": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.includePackageJsonAutoImports": "on",
  "typescript.preferences.includeAutomaticOptionalChainCompletions": false,
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "typescript.preferences.useLabelDetailsInCompletionEntries": true,
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.tsserver.maxTsServerMemory": 4096,
  "typescript.disableAutomaticTypeAcquisition": true,
  "typescript.tsserver.watchOptions": {
    "watchFile": "useFsEvents",
    "watchDirectory": "useFsEvents",
    "fallbackPolling": "dynamicPriorityPolling"
  },
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "javascript.validate.enable": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },
  "files.associations": {
    "turbo.json": "json"
  },
  // --- ESLINT & DEPENDENCY INSIGHTS ----------------------------------------
  "eslint.enable": true,
  "eslint.run": "onSave",
  "eslint.validate": [
    "typescript",
    "typescriptreact"
  ],
  "dependi.vulnerability.enabled": true,
  "dependi.vulnerability.ghsa.enabled": true,
  "dependi.rust.enabled": true,
  "dependi.rust.lockFileEnabled": true,
  "dependi.npm.enabled": true,
  "dependi.npm.lockFileEnabled": true,
  "dependi.go.enabled": true,
  "dependi.python.enabled": true,
  "dependi.python.lockFileEnabled": true,
  "dependi.php.enabled": true,
  "dependi.php.lockFileEnabled": true,
  "dependi.dart.enabled": true,
  "dependi.dart.lockFileEnabled": true,
  // --- FILE EXCLUSIONS ------------------------------------------------------
  "files.exclude": {
    "**/node_modules": true,
    "**/.next": true,
    "**/__pycache__": true,
    "**/dist": true,
    "**/.turbo": true,
    "**/.vitest": true,
    "**/coverage": true,
    "**/mcp-servers/": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/*.sqlite": false,
    "**/cortex-*.sqlite": false
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/coverage": true,
    "**/mcp-servers/": true,
    "**/bower_components": true,
    "**/.turbo": true,
    "**/.next": true,
    "**/dist": true
  },
  "files.watcherExclude": {
    "**/mcp-servers/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.turbo/**": true,
    "**/dist/**": true
  },
  // --- PYTHON & TESTING -----------------------------------------------------
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.autoComplete.extraPaths": [],
  "python.defaultInterpreterPath": "/Users/jamiecraik/.local/share/mise/installs/python/3.12.6/bin/python",
  "python.analysis.typeCheckingMode": "strict",
  "python.analysis.addHoverSummaries": true,
  "python.linting.enabled": true,
  "python.linting.ruffEnabled": true,
  "python.formatting.provider": "black",
  "python.languageServer": "None",
  "python.terminal.activateEnvironment": true,
  "python.terminal.useEnvFile": true,
  "black-formatter.path": [
    "/Users/jamiecraik/.local/share/mise/installs/python/3.12.6/bin/black"
  ],
  "black-formatter.serverRestart.timeout": 30000,
  "ruff.path": [
    "/Users/jamiecraik/.local/share/mise/installs/python/3.12.6/bin/ruff"
  ],
  "ruff.configuration": "/Users/jamiecraik/.Cortex-OS/config/pyproject.toml",
  "ruff.serverRestart.timeout": 30000,
  "ruff.restartSettings": [
    "ruff.configuration"
  ],
  "mypy-type-checker.path": [
    "/Users/jamiecraik/.local/share/mise/installs/python/3.12.6/bin/mypy"
  ],
  "mypy-type-checker.serverRestart.timeout": 30000,
  // --- TERMINAL CONFIGURATION -----------------------------------------------
  "terminal.integrated.fontFamily": "JetBrains Mono, monospace",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.gpuAcceleration": "auto",
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.persistentSessionReviveProcess": "onExit",
  "terminal.integrated.accessibleViewFocusOnCommandExecution": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.enableImages": true,
  "terminal.integrated.enableVisualBell": true,
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.stickyScroll.enabled": true,
  "terminal.integrated.suggest.enabled": true,
  "terminal.integrated.tabs.defaultColor": "terminal.ansiGreen",
  "terminal.integrated.copilotChat.enabled": true,
  "terminal.integrated.commandsToSkipShell": [
    "editor.action.accessibilityHelp",
    "editor.action.toggleTabFocusMode",
    "notification.acceptPrimaryAction",
    "notifications.hideList",
    "notifications.hideToasts",
    "workbench.action.quickOpen",
    "workbench.action.showCommands",
    "workbench.action.quickOpenView",
    "workbench.action.closeQuickOpen",
    "workbench.action.navigateBack",
    "workbench.action.navigateForward",
    "workbench.action.showAllSymbols",
    "editor.action.insertCursorAbove",
    "editor.action.insertCursorBelow",
    "editor.action.selectHighlights",
    "workbench.action.files.newUntitledFile",
    "workbench.action.quickOpenRecent",
    "actions.find",
    "editor.action.startFindReplaceAction"
  ],
  "terminal.integrated.fontWeight": "normal",
  "terminal.integrated.persistentSessionScrollback": 10000,
  "terminal.integrated.sendKeybindingsToShell": true,
  "terminal.integrated.shellIntegration.enabled": false,
  // --- GIT SETTINGS ---------------------------------------------------------
  "git.autofetch": true,
  "git.autofetchPeriod": 180,
  "git.enableSmartCommit": true,
  "git.postCommitCommand": "push",
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "never",
  "github-actions.remote-name": "main",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.ai.model": "openai:gpt-4",
  "gitlens.gitCommands.skipConfirmations": [
    "fetch:command",
    "push:command"
  ],
  "gitlens.launchpad.indicator.enabled": false,
  "gitlens.views.repositories.showIncomingActivity": true,
  // --- RUN ON SAVE AUTOMATION -----------------------------------------------
  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": "\\.(js|ts|jsx|tsx|py|md)$",
        "cmd": "git add ${file} && git commit -m 'Auto-save: ${fileBasename}' || true"
      }
    ]
  },
  // --- MATERIAL ICON THEME CONFIGURATION ------------------------------------
  "material-icon-theme.enableLogging": true,
  "material-icon-theme.opacity": 1,
  "material-icon-theme.folders.theme": "specific",
  "material-icon-theme.folders.color": "#42a5f5",
  "material-icon-theme.files.color": "#42a5f5",
  "material-icon-theme.activeIconPack": "none",
  "material-icon-theme.hidesExplorerArrows": false,
  "material-icon-theme.files.associations": {
    // AI & Security Files
    "RULES_OF_AI.md": "lock",
    "AGENTS.md": "robot",
    "ai-partnership.md": "robot",
    "copilot-instructions.md": "copilot",
    "registry.yml": "settings",
    "model-config.json": "ai",
    "model-config.yaml": "ai",
    "model-config.yml": "ai",
    ".aiexclude": "Gemini-ai",
    "mcp.json": "robot",
    ".mcp.json": "robot",
    ".mcp.config.json": "robot",
    "*.chatmode.md": "copilot",
    "*.prompt.md": "copilot",
    "*.instructions.md": "copilot",
    "cursor-rules": "robot",
    ".cursor": "robot",
    ".windsurfrules": "robot",
    "generate-prp.chatmode.md": "copilot",
    "brainwav-mentor.chatmode.md": "copilot",
    "4.1-Beast.chatmode.md": "copilot",
    "ai-code-review.prompt.md": "copilot",
    "generate-prp.prompt.md": "copilot",
    "system-prompt.md": "copilot",
    "copilot-testGeneration.instructions.md": "copilot",
    "copilot-markdown.instructions.md": "copilot",
    "copilot-commitMessage.instructions.md": "copilot",
    "copilot-codeReview.instructions.md": "copilot",
    "copilot-pullRequest.instructions.md": "copilot",
    "memory.instructions.md": "copilot",
    "copilot-qualityGates.instructions.md": "copilot",
    ".pre-commit-config.yaml": "pre-commit",
    ".pre-commit-hooks.yaml": "pre-commit",
    "pre-commit-config.yaml": "pre-commit",
    ".husky": "husky",
    // Cortex OS Specific Files
    "cortex-config.json": "settings",
    "cortex-config.yaml": "settings",
    "cortex-config.yml": "settings",
    "cortex-claude-code-router.json": "robot",
    "cortex-claude-code-router.example.json": "robot",
    "coordination-engine.log": "log",
    "python-agent-bridge.log": "log",
    "cross-lang-sync-report.json": "json",
    "dependency-*.json": "package",
    "bloat-cleanup-report.json": "json",
    "security-*.json": "lock",
    "license-*.json": "license",
    "terminal-tool-license-compliance-report.json": "license",
    "sbom.spdx.json": "license",
    "*.prp.md": "document",
    "*.spec.md": "document",
    "GEMINI.md": "ai",
    "CLAUDE.md": "ai",
    "context-prime.md": "document",
    "CORTEX_OS_AUDIT_REPORT.md": "document",
    "ISSUE_*_RESOLUTION.md": "document",
    "*_COMPLETE.md": "document",
    "*_REPORT.md": "document",
    "ADAPTER_SURFACE.md": "document",
    "DEVELOPMENT.md": "document",
    "PLAN.md": "document",
    "SUMMARY.md": "document",
    "INITIAL.md": "document",
    "PR_CHECKLIST.md": "document",
    "DEPRECATION_WRAPPERS.md": "document",
    "TDD_MIGRATION_FRAMEWORK.md": "document",
    "VULNERABILITY_REMEDIATION_COMPLETE.md": "lock",
    "PERFORMANCE_OPTIMIZATION_REPORT.md": "document",
    "DEVELOPMENT_WORKFLOW_IMPROVEMENTS_REPORT.md": "document",
    "PHASE45_IMPLEMENTATION_SUMMARY.md": "document",
    // Database & Data Files
    "*.sqlite": "database",
    "*.sqlite3": "database",
    "*.db": "database",
    "*.lance": "database",
    "brainstore": "database",
    "cortex-brainstore": "database",
    "cortex-ai.sqlite": "database",
    "ai.sqlite": "database",
    "default.sqlite": "database",
    "*.brainstore": "database",
    // Configuration & Settings Files
    "turbo.json": "settings",
    "vitest.config.ts": "test-ts",
    "vitest.config.js": "test-js",
    "vitest.*.config.ts": "test-ts",
    "vitest.*.config.js": "test-js",
    "playwright.config.ts": "test-ts",
    "playwright.config.js": "test-js",
    ".pa11yci.json": "test",
    ".lighthouserc.js": "test",
    "jest.config.js": "test-js",
    "jest.config.ts": "test-ts",
    "babel.config.js": "babel",
    "dprint.json": "settings",
    "sonar-project.properties": "settings",
    "pnpm-workspace.yaml": "pnpm",
    "pnpm-lock.yaml": "pnpm",
    "pnpm-allow-builds.json": "pnpm",
    "release-please-config.json": "settings",
    ".release-please-manifest.json": "settings",
    "mkdocs.yml": "settings",
    "eslint.config.js": "eslint",
    ".eslintrc*": "eslint",
    ".prettierignore": "prettier",
    ".prettierrc*": "prettier",
    ".lycheeignore": "settings",
    ".snyk": "lock",
    ".semgrep.yaml": "lock",
    "tech-stack-preferences.md": "document",
    "personas.json": "json",
    "devops.plan.json": "json",
    "devops.plan.schema.json": "json",
    "tdd.plan.json": "json",
    "MigrationPlan.json": "json",
    "initial.yaml": "yaml",
    // Environment & Secrets
    ".env*": "tune",
    ".env.template": "tune",
    ".env.carbon": "tune",
    ".env.local": "tune",
    // Git & CI/CD
    ".gitmodules": "git",
    ".gitignore": "git",
    ".commitlintrc.cjs": "settings",
    ".lintstagedrc.js": "settings",
    ".markdownlint.json": "settings",
    "ci.patch": "git",
    "git_plan.sh": "git",
    // Project Structure Files
    ".project-structure.json": "json",
    "demo_sample_prp.json": "json",
    "test.json": "json",
    "header-errors.log": "log",
    "*.log": "log",
    "pr_body.txt": "text",
    "tmp_text.txt": "text",
    "tmp_truth.json": "json",
    "demo-output.txt": "text",
    "marketplace-demo-output.txt": "text",
    "project-scan-results.json": "json",
    // AI & ML Files
    "*.prompt": "copilot",
    "*.chatmode": "copilot",
    "*.gemini": "ai",
    "*.claude": "ai",
    "*.mcp": "robot",
    "mlxclaude": "ai",
    // Development Tools
    "Dockerfile*": "docker",
    "docker-compose*.yml": "docker",
    "docker-compose*.yaml": "docker",
    "Containerfile*": "docker",
    ".dockerignore": "docker",
    // Python Files
    "requirements*.txt": "python",
    "requirements*.txt.bak": "python",
    "pyproject.toml": "python",
    "setup.py": "python",
    "setup.cfg": "python",
    // Node.js & JavaScript
    "package*.json": "nodejs",
    "package*.json.bak": "nodejs",
    "tsconfig.json": "tsconfig",
    "tsconfig*.json": "tsconfig",
    // Documentation & Assets
    "SECURITY.md": "lock",
    "CONTRIBUTING.md": "document",
    "CHANGELOG.md": "changelog",
    "README*.md": "document",
    "README*.md.bak": "document",
    "accessibility_ethical_ai.html": "document",
    "__init__.html": "html",
    "voice-demo.html": "html",
    "*.plugin.ts": "plugin",
    "gpu-monitor.plugin.ts": "plugin",
    "thermal-guard.plugin.ts": "plugin",
    "improved-cleanmac.sh": "shell",
    "README-improved-cleanmac.md": "document"
  },
  // --- FOLDER ASSOCIATIONS ---------------------------------------------------
  "material-icon-theme.folders.associations": {
    // AI & Machine Learning
    "ai": "robot",
    ".ai": "robot",
    "agents": "robot",
    "models": "ai",
    "ml": "ai",
    "deep-learning": "ai",
    "neural-networks": "ai",
    "llm": "ai",
    "llms": "ai",
    "embeddings": "ai",
    "vectors": "ai",
    "mcp": "robot",
    ".mcp": "robot",
    "mcp_tools": "robot",
    "pytorch": "pytorch",
    "torch": "pytorch",
    "tensorflow": "ai",
    "keras": "ai",
    "transformers": "ai",
    "huggingface": "ai",
    // Cortex OS Specific Directories
    "cortex-instructions": "robot",
    "cortex-prompts": "robot",
    "cortex-specs": "document",
    "cortex-scripts": "tools",
    "cortex-rules": "rules",
    "cortex-standards": "document",
    "cortex-templates": "template",
    "cortex-brainstore": "database",
    "cortex-os": "app",
    "cortex-cli": "command",
    "cortex-py": "python",
    "cortex-ts": "typescript",
    "cortex-ios": "mobile",
    "cortex-cli-ui": "ui",
    "cortex-os-prp-framework": "document",
    "instructions": "robot",
    "prompts": "robot",
    "prp": "document",
    "PRPs": "document",
    "specs": "document",
    "standards": "document",
    "templates": "template",
    "brainstore": "database",
    "memory": "database",
    "bridge": "api",
    "worktree": "git",
    "external": "lib",
    "__archive__": "archive",
    "_inbox": "temp",
    "CONTEXT": "document",
    // Apps & Services Structure
    "apps": "app",
    "api": "api",
    "cortex-code": "app",
    "cortex-marketplace": "app",
    "cortex-marketplace-api": "api",
    "cortex-webui": "ui",
    "web": "app",
    "vscode-extension": "vscode",
    "asbr-dashboard": "dashboard",
    "asbr-monitor": "monitoring",
    "asbr-portal": "app",
    "bun-react": "react",
    "docs-api": "docs",
    // Packages & Libraries
    "packages": "lib",
    "a2a": "api",
    "a2a-protocol": "api",
    "a2a-services": "api",
    "accessibility": "rules",
    "agent-toolkit": "tools",
    "agents-docgen": "robot",
    "agui": "ui",
    "asbr": "api",
    "asbr-ui": "ui",
    "commands": "command",
    "avaturl": "lib",
    "cortex-ai-github": "github",
    "cortex-logging": "log",
    "cortex-mcp": "robot",
    "brainwav-agents": "robot",
    "brainwav-api": "api",
    "brainwav-memory": "database",
    "brainwav-ui": "ui",
    "cortex-sec": "lock",
    "cortex-semgrep-github": "github",
    "cortex-structure-github": "github",
    "carbon-monitoring": "monitoring",
    "chatterbox-tts": "audio",
    "cli-tools": "command",
    "component-docs": "docs",
    "cortex-core": "core",
    "evals": "test",
    "evidence-runner": "test",
    "executor-spool": "tools",
    "gateway": "server",
    "create-cortex-app": "template",
    "datamax": "database",
    "github": "github",
    "history-store": "database",
    "hooks": "git",
    "integrations": "api",
    "kernel": "core",
    "license-scanner": "license",
    "mcp-bridge": "robot",
    "mcp-core": "core",
    "mcp-registry": "robot",
    "mcp-server": "server",
    "memories": "database",
    "memory-core": "core",
    "memory-rest-api": "api",
    "model-gateway": "api",
    "dependency-management": "package",
    "evidence-validator": "test",
    "ingest-marker": "database",
    "mvp": "app",
    "mvp-core": "core",
    "mvp-group": "app",
    "mvp-server": "server",
    "observability": "monitoring",
    "model-templates": "template",
    "openai-anthropic-middleware": "api",
    "orchestration": "api",
    "orchestration-analytics": "analytics",
    "patchkit": "tools",
    "policy": "rules",
    "protocol": "api",
    "prp-runner": "tools",
    "python-agents": "python",
    "rag": "ai",
    "repo-guardrails": "rules",
    "registry": "settings",
    "retrieval-layer": "database",
    "sakura": "lib",
    "sdk": "lib",
    "security": "lock",
    "security-atlas": "lock",
    "security-file-validation": "lock",
    "simlab": "test",
    "slash-commands": "command",
    "stage-schemas": "json",
    "stream-client": "analytics",
    "stream-protocol": "api",
    "struct-scan": "tools",
    "telemetry": "analytics",
    "testing": "test",
    "tdd-coach": "test",
    "ui": "ui",
    "ui-components": "ui",
    "ui2code": "ui",
    "tool-spec": "tools",
    "utils": "tools",
    "yt-safe-downloader": "download",
    // Data & Databases
    "data": "database",
    "datasets": "database",
    "cache": "temp",
    "logs": "log",
    "performance-logs": "log",
    "backups": "archive",
    ":memory:": "database",
    // Infrastructure & DevOps
    "infra": "server",
    "terraform": "server",
    "k8s": "kubernetes",
    "kubernetes": "kubernetes",
    "deploy": "server",
    "devops": "server",
    "monitoring": "monitoring",
    "nginx": "server",
    "server": "server",
    "services": "api",
    // Development & Testing
    "notebooks": "jupyter",
    "jupyter": "jupyter",
    "tests": "test",
    "test": "test",
    "__tests__": "test",
    "test-data": "test",
    "test-results": "test",
    "test-stubs": "test",
    ".devcontainer": "container",
    ".husky": "git",
    ".changeset": "git",
    "docker": "docker",
    ".codex": "ai",
    ".claude": "ai",
    ".gemini": "ai",
    ".cursor": "robot",
    ".superdesign": "ui",
    "playwright-report": "test",
    "a11y": "rules",
    "__pycache__": "python",
    ".pytest_cache": "python",
    ".mypy_cache": "python",
    ".ruff_cache": "python",
    ".venv": "python",
    ".venv-3.12": "python",
    ".coverage": "test",
    "node_modules": "node",
    "examples": "examples",
    "snapshots": "test",
    "out": "build",
    // Documentation & Resources
    "docs": "docs",
    "docs-built": "docs",
    "docs-generated": "docs",
    "project-documentation": "docs",
    "resources": "docs",
    "legal-notifications": "license",
    "runbooks": "docs",
    "reviews": "docs",
    "migration-specs": "docs",
    "reports": "docs",
    // Shared & Common
    "common": "shared",
    "shared": "shared",
    "lib": "lib",
    "vendor": "lib",
    "ext": "lib",
    // CLI & Scripts
    "bin": "scripts",
    "cli": "command",
    "config": "config",
    "rules": "rules",
    "scripts": "tools",
    "tools": "tools",
    "plugins": "plugin",
    // Version Control & CI/CD
    ".github": "github",
    ".vscode": "vscode",
    ".cortex": "app",
    ".cortex-os": "app",
    ".turbo": "turbo",
    // Databases & Storage
    ".neo4j_data": "database",
    ".qdrant_data": "database",
    "provenance": "database",
    "schemas": "json",
    // Build & Distribution
    "dist": "build",
    "site": "build",
    "uploads": "upload",
    "downloads": "download",
    "tmp": "temp",
    "term-code-temp": "temp",
    // AI & Content Generation
    "personas": "robot",
    "voice": "audio",
    "issues": "bug",
    "ide": "vscode",
    "types": "typescript"
  },
  // --- ACCESSIBILITY SIGNALS ------------------------------------------------
  "accessibility.signals.codeActionApplied": {
    "sound": "off"
  },
  "accessibility.signals.chatEditModifiedFile": {
    "sound": "off"
  },
  "accessibility.signals.chatRequestSent": {
    "sound": "off"
  },
  "accessibility.signals.clear": {
    "sound": "off"
  },
  "accessibility.signals.codeActionTriggered": {
    "sound": "off"
  },
  "accessibility.signals.diffLineDeleted": {
    "sound": "off"
  },
  "accessibility.signals.diffLineInserted": {
    "sound": "off"
  },
  "accessibility.signals.diffLineModified": {
    "sound": "off"
  },
  "accessibility.signals.editsKept": {
    "sound": "off"
  },
  "accessibility.signals.terminalBell": {
    "sound": "off"
  },
  "accessibility.hideAccessibleView": true,
  // --- GITHUB COPILOT SETTINGS ----------------------------------------------
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  "github.copilot.updateChannel": "Insiders",
  "github.copilot.selectedCompletionModel": "gpt-4",
  "github.copilot.chat.useWorkspace": true,
  "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.chat.agent.autoFix": true,
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.chat.completionContext.typescript.mode": "on",
  "github.copilot.chat.editor.temporalContext.enabled": true,
  "github.copilot.chat.edits.temporalContext.enabled": true,
  "github.copilot.chat.generateTests.codeLens": true,
  "github.copilot.chat.languageContext.fix.typescript.enabled": true,
  "github.copilot.chat.languageContext.inline.typescript.enabled": true,
  "github.copilot.chat.languageContext.typescript.enabled": true,
  "github.copilot.chat.newWorkspace.useContext7": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.chat.scopeSelection": true,
  "github.copilot.chat.responsesApiReasoningSummary": "detailed",
  "github.copilot.chat.useResponsesApi": true,
  "github.copilot.chat.azureModels": {},
  // --- CHAT & AGENT TOOLING -------------------------------------------------
  "chat.tools.terminal": {
    "autoApprove": true
  },
  "chat.agent.maxRequests": 500,
  "chat.tools": {
    "autoApprove": true
  },
  "chat.agentSessionsViewLocation": "view",
  "chat.mcp.assisted.nuget.enabled": true,
  "chat.mcp.serverSampling": {
    "Global in Code: apify": {
      "allowedModels": [
        "copilot/gpt-5-mini"
      ]
    }
  },
  "chat.mcp.access": "all",
  "chat.tools.global.autoApprove": true,
  "chat.todoListTool.enabled": true,
  "chat.todoListTool.writeOnly": true,
  "chat.mcp.serverSamplingStrategy": "balanced",
  "chat.editing.confirmEditRequestRemoval": false,
  // --- TELEMETRY & PRIVACY --------------------------------------------------
  "redhat.telemetry.enabled": false,
  "docker.extension.enableComposeLanguageServer": true,
  "docker.extension.dockerEngineAvailabilityPrompt": false,
  "docker.commands.build": "--pull",
  "containers.commands.build": "--pull",
  // --- SPELL CHECKER --------------------------------------------------------
  "streetsidesoftware.code-spell-checker.userLanguageIds": [
    "typescript",
    "typescriptreact",
    "javascript",
    "python",
    "dockerfile",
    "dockercompose",
    "yaml",
    "json",
    "jsonc",
    "plaintext",
    "shell",
    "bash",
    "sh",
    "makefile",
    "html",
    "css",
    "scss",
    "less",
    "graphql",
    "sql",
    "regex",
    "git-commit",
    "git-rebase",
    "git-merge",
    "git-cherry-pick",
    "git-log",
    "git-reflog",
    "git-blame",
    "git-remote",
    "git-config",
    "gitignore",
    "editorconfig",
    "task",
    "launch",
    "settings.json",
    "keybindings.json",
    "locale.json",
    "package.json",
    "tsconfig.json",
    "jsconfig.json",
    "tslint.json",
    "jest.config.js",
    "jest.config.ts",
    "babel.config.js",
    "eslintrc.json",
    "prettierrc.json",
    "prettierrc.js",
    "prettierrc.yaml",
    "prettierrc.yml",
    "prettierrc.toml",
    "prettierrc",
    "stylelintrc.json",
    "stylelintrc.js",
    "stylelintrc.yaml",
    "stylelintrc.yml",
    "stylelintrc"
  ],
  "debug.javascript.defaultRuntimeExecutable": {
    "pwa-node": "/Users/jamiecraik/.local/share/mise/shims/node"
  },
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },
}

  // Performance Optimizations - Added 2025-01-14
  "typescript.tsserver.maxTsServerMemory": 8192,
  "typescript.disableAutomaticTypeAcquisition": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": false,
  "typescript.tsserver.useSyntaxServer": "auto",
  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/out": true,
    "**/.nx": true,
    "**/coverage": true,
    "**/htmlcov": true,
    "**/.venv": true,
    "**/target": true,
    "**/__tests__": true,
    "**/test-results": true,
    "**/playwright-report": true,
    "**/pnpm-lock.yaml": true
  },
  "files.watcherExclude": {
    "**/node_modules/**": true,
    "**/.nx/**": true,
    "**/dist/**": true,
    "**/out/**": true,
    "**/coverage/**": true,
    "**/htmlcov/**": true,
    "**/.venv/**": true,
    "**/target/**": true,
    "**/__tests__/**": true,
    "**/test-results/**": true,
    "**/playwright-report/**": true
  }
}
