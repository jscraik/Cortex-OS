# syntax=docker/dockerfile:1.7
#
# brAInwav Enhanced MCP Server
# Reproducible build with lockfile + observability tooling

ARG NODE_VERSION=22.19.0
ARG PNPM_VERSION=10.4.0

FROM node:${NODE_VERSION}-alpine AS base
ENV NODE_ENV=production
WORKDIR /app
RUN addgroup -S mcp && adduser -S mcp -G mcp \
	&& corepack enable \
	&& corepack prepare pnpm@${PNPM_VERSION} --activate

# -----------------------------------------------------------------------------
# deps stage - cacheable install using lockfile + offline store
# -----------------------------------------------------------------------------
FROM base AS deps
COPY pnpm-lock.yaml package.json pnpm-workspace.yaml ./
COPY packages/mcp-server/package.json packages/mcp-server/
RUN pnpm fetch --frozen-lockfile

# -----------------------------------------------------------------------------
# build stage - install from offline store and compile artifacts
# -----------------------------------------------------------------------------
FROM base AS build
COPY --from=deps /root/.local/share/pnpm/store /root/.local/share/pnpm/store
COPY . .
RUN pnpm install --frozen-lockfile --offline \
	&& pnpm -w --filter @cortex-os/mcp-server... build

# -----------------------------------------------------------------------------
# runtime stage - minimal assets + non-root execution
# -----------------------------------------------------------------------------
FROM node:${NODE_VERSION}-alpine AS runtime
ENV NODE_ENV=production
WORKDIR /app
RUN addgroup -S mcp && adduser -S mcp -G mcp && apk add --no-cache tini wget
USER mcp

COPY --from=build /app/pnpm-lock.yaml /app/package.json /app/pnpm-workspace.yaml ./
COPY --from=build /app/packages/mcp-server/package.json ./packages/mcp-server/
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/packages/mcp-server/dist ./packages/mcp-server/dist

EXPOSE 3024
ENTRYPOINT ["/sbin/tini","--"]
CMD ["node","packages/mcp-server/dist/index.js"]

HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
  CMD wget -qO- http://127.0.0.1:3024/health | grep -qi "brainwav" || exit 1

LABEL \
	org.opencontainers.image.title="brAInwav Enhanced MCP Server" \
	org.opencontainers.image.description="Model Context Protocol server with brAInwav security enhancements" \
	org.opencontainers.image.vendor="brAInwav" \
	org.opencontainers.image.source="https://github.com/jamiescottcraik/Cortex-OS" \
	com.brainwav.service="mcp-server" \
	com.brainwav.tier="core" \
	com.brainwav.version="1.0.0" \
	com.brainwav.features="security-enhanced,policy-engine,audit-logging"
