name: semgrep-baseline-refresh
on:
  schedule:
    - cron: '17 3 * * 1' # Weekly Monday 03:17 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  refresh-baseline:
    runs-on: ubuntu-latest
    env:
      STALE_DAYS: 30
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check baseline staleness
        id: stale
        run: |
          FILE=reports/semgrep-baseline.json
          if [ ! -f "$FILE" ]; then echo "missing=true" >> $GITHUB_OUTPUT; echo "Baseline missing"; exit 0; fi
          MOD_SECS=$(stat -c %Y "$FILE" 2>/dev/null || stat -f %m "$FILE")
          NOW_SECS=$(date +%s)
          AGE_DAYS=$(( (NOW_SECS - MOD_SECS) / 86400 ))
          echo "Baseline age days: $AGE_DAYS"
          if [ "$AGE_DAYS" -ge "$STALE_DAYS" ]; then echo "stale=true" >> $GITHUB_OUTPUT; else echo "stale=false" >> $GITHUB_OUTPUT; fi
          echo "age_days=$AGE_DAYS" >> $GITHUB_OUTPUT
      - name: Setup PNPM
        if: steps.stale.outputs.stale == 'true' || steps.stale.outputs.missing == 'true'
        uses: pnpm/action-setup@v4
        with:
          version: 10.3.0
      - name: Install deps
        if: steps.stale.outputs.stale == 'true' || steps.stale.outputs.missing == 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts
      - name: Generate new baseline
        if: steps.stale.outputs.stale == 'true' || steps.stale.outputs.missing == 'true'
        run: |
          mkdir -p reports
          pnpm security:scan:baseline
          ls -l reports/semgrep-baseline.json
      - name: Append severity trend (HIGH+MEDIUM)
        if: steps.stale.outputs.stale == 'true' || steps.stale.outputs.missing == 'true'
        run: |
          FILE=reports/semgrep-baseline.json
          if [ -f "$FILE" ]; then
            HIGH=$(jq '[.results[] | ( .severity // .extra.severity // "" ) | ascii_upcase | select(.=="HIGH" or .=="CRITICAL" or .=="ERROR") ] | length' "$FILE")
            MED=$(jq '[.results[] | ( .severity // .extra.severity // "" ) | ascii_upcase | select(.=="MEDIUM" or .=="WARNING") ] | length' "$FILE")
            LOW=$(jq '[.results[] | ( .severity // .extra.severity // "" ) | ascii_upcase | select(.=="LOW" or .=="INFO") ] | length' "$FILE")
            TS=$(date -u +%Y-%m-%dT%H:%M:%SZ)
            echo "{\"timestamp\":\"$TS\",\"baselineAgeDays\":${{ steps.stale.outputs.age_days || '0' }},\"high\":$HIGH,\"medium\":$MED,\"low\":$LOW}" >> reports/semgrep-trend.jsonl
            echo "Appended trend line: $(tail -n 1 reports/semgrep-trend.jsonl)"
          fi
      - name: Create PR with refreshed baseline
        if: steps.stale.outputs.stale == 'true' || steps.stale.outputs.missing == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore(security): refresh semgrep baseline"
          title: "chore(security): refresh Semgrep baseline"
          body: |
            Automated refresh of Semgrep baseline.

            Age (days): ${{ steps.stale.outputs.age_days }} (threshold: ${{ env.STALE_DAYS }})

            Please review and ensure no unexpected drift before merging.
          branch: chore/semgrep-baseline-refresh
          delete-branch: true
          labels: security-baseline, security, automated
