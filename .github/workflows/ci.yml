name: ci
on:
  push: { branches: ["main"] }
  pull_request:

permissions:
  contents: read
  security-events: write # for potential future SARIF uploads (can be narrowed if unused)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality Gates (Lint • Typecheck • Test • Build)
    uses: ./.github/workflows/quality-gates.yml
    with:
      node-version: '22'
      pnpm-version: '9'
      use-smart-scripts: true
      test-coverage: true

  bun-lane:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup mise (Node + Bun)
        uses: jdx/mise-action@156251fcc627ac4e26cb0f93dd47d1d4979abf24
        with:
          tool_versions: |
            nodejs 22
            bun 1.2.2
      - name: Print bun version
        run: bun -v
      - name: Install deps (bun)
        run: bun install --frozen-lockfile || true
      - name: Run tests (bun, non-blocking)
        run: bun run -T nx run-many -t test --parallel || true

  secrets:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gitleaks (PR diff)
        if: github.event_name == 'pull_request'
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --redact --report-format sarif --report-path gitleaks.sarif --config=.gitleaks.toml

      - name: Gitleaks (full scan)
        if: github.event_name != 'pull_request'
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --redact --no-git --report-format sarif --report-path gitleaks.sarif --config=.gitleaks.toml

      - name: Upload Gitleaks SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif
