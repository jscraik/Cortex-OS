name: quality-gates

on:
  workflow_call:
    inputs:
      node-version:
        description: Node.js version to use
        required: false
        type: string
        default: '22'
      pnpm-version:
        description: pnpm version to install
        required: false
        type: string
        default: '10.18.0'
      run-lint:
        description: Run lint checks
        required: false
        type: boolean
        default: true
      run-typecheck:
        description: Run TypeScript type checking
        required: false
        type: boolean
        default: true
      run-tests:
        description: Execute unit tests
        required: false
        type: boolean
        default: true
      run-build:
        description: Build affected projects
        required: false
        type: boolean
        default: true
      install-flags:
        description: Extra flags to forward to pnpm install
        required: false
        type: string
        default: '--frozen-lockfile'
    outputs:
      cache-hit:
        description: Whether the pnpm store cache hit
        value: ${{ jobs.quality.outputs.cache-hit }}

permissions:
  contents: read
  checks: write

jobs:
  quality:
    name: Run monorepo quality gates
    runs-on: ubuntu-latest
    timeout-minutes: 45
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpm-version }}

      - name: Resolve pnpm store path
        id: store
        shell: bash
        run: echo "path=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.store.outputs.path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install workspace dependencies
        run: pnpm install ${{ inputs.install-flags }}

      - name: Lint source code
        if: inputs.run-lint
        run: pnpm lint:smart

      - name: Typecheck projects
        if: inputs.run-typecheck
        run: pnpm typecheck:smart

      - name: Run unit tests
        if: inputs.run-tests
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: pnpm test:smart

      - name: Audit observability adoption
        run: pnpm audit:observability

      - name: Build affected packages
        if: inputs.run-build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: pnpm build:smart
