name: Security - SCA, Sigstore signing & verification

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  security-events: write

concurrency:
  group: security-sca-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-scan:
    name: Dependency & Supply Chain Scan
    runs-on: ubuntu-latest
    steps:
      - name: Full-stack setup
        uses: ./.github/actions/full-stack-setup
        with:
          node-version: '20'  # Updated from 18
          pnpm-version: '9'
          python-version: '3.11'
          uv: 'true'

      - name: Run npm audit
        run: pnpm audit --audit-level=moderate || true

      - name: Run snyk (optional)
        if: ${{ secrets.SNYK_TOKEN != '' }}
        uses: snyk/actions/node@9adf32b1121593767fc3c057af55b55db032dc04
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Python pip-audit
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'

      - name: Install pip-audit
        run: python -m pip install --upgrade pip pip-audit

      - name: Run pip-audit (repo wide)
        run: |
          if [ -f pyproject.toml ] || [ -f requirements.txt ]; then
            pip-audit || true
          else
            echo "No python deps detected"
          fi

      - name: OSS Index scan (optional)
        if: ${{ secrets.OSSINDEX_API_TOKEN != '' }}
        run: |
          echo "OSS Index scan placeholder - implement per-repo scripting or use a community action"

      - name: Upload SCA report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: sca-reports
          path: |
            pnpm-lock.yaml
            pip-audit-results.txt

  build-and-sign:
    name: Build, sign artifacts with Sigstore (cosign)
    runs-on: ubuntu-latest
    needs: dependency-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: '18'

      - name: Set up pnpm
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d
        with:
          version: 9

      - name: Install dependencies and build
        run: |
          pnpm install --frozen-lockfile
          pnpm build || true

      - name: Install cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62
        with:
          cosign-release: 'v2.3.0'

      - name: Sign build artifacts with cosign (OIDC)
        env:
          COSIGN_EXPERIMENTAL: '1'
        run: |
          # Sign core lockfiles and build output
          ARTIFACTS="pnpm-lock.yaml"
          for f in $ARTIFACTS; do
            if [ -f "$f" ]; then
              cosign sign --oidc --output-signature "$f.sig" "$f" || true
            fi
          done

      - name: Upload signed artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: signed-artifacts
          path: |
            pnpm-lock.yaml.sig
            pnpm-lock.yaml

  verify-signature:
    name: Verify signatures (provenance)
    runs-on: ubuntu-latest
    needs: build-and-sign
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Install cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62
        with:
          cosign-release: 'v2.3.0'

      - name: Download signed artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: signed-artifacts

      - name: Verify signature
        run: |
          if [ -f pnpm-lock.yaml.sig ]; then
            cosign verify-blob --key ${{ secrets.COSIGN_PUBKEY }} --signature pnpm-lock.yaml.sig pnpm-lock.yaml || exit 1
          else
            echo "No signature found to verify"
            exit 1
          fi
