name: MCP Server Release

on:
  push:
    tags:
      - 'mcp-server-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  BRAINWAV_ENV: production

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build MCP Server
        run: |
          cd packages/mcp-server
          pnpm build

      - name: Run tests
        run: |
          cd packages/mcp-server
          pnpm test

      - name: Validate MCP tools
        run: |
          cd packages/mcp-server
          node dist/index.js --help || echo "MCP server built successfully"

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/mcp-server-v}" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/mcp-server
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/mcp-server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BRAINWAV_VERSION=${{ steps.version.outputs.version }}
            BRAINWAV_ENV=production

      - name: Generate SBOM
        uses: anchore/sbom-action@v0.20.6
        with:
          image: ${{ env.REGISTRY }}/${{ github.repository }}/mcp-server:${{ steps.version.outputs.version }}
          format: spdx-json
          output-file: sbom-mcp-server-${{ steps.version.outputs.version }}.spdx.json

      - name: Sign image with Cosign
        uses: sigstore/cosign-installer@v3.10.0

      - name: Sign the published Docker image
        run: |
          cosign sign --yes \
            ${{ env.REGISTRY }}/${{ github.repository }}/mcp-server:${{ steps.version.outputs.version }}

      - name: Generate release notes
        id: release-notes
        run: |
          cat > release-notes.md << 'EOF'
          # brAInwav Cortex-OS MCP Server v${{ steps.version.outputs.version }}

          ## Features

          ### Memory Management
          - Persistent memory storage with Qdrant vector database
          - Semantic search across all memories
          - Hybrid search with re-ranking
          - Memory reports and analytics
          - Relationship management

          ### Agent Toolkit
          - Code search and analysis
          - Structural modifications (codemod)
          - Validation tools
          - Scout operations

          ### Pieces Integration
          - Query Pieces Long-Term Memory
          - Context capture ready
          - Event streaming support

          ### Advanced Features
          - Session tracking and persistence
          - Token budget management (40K tokens)
          - Resilient execution with retries
          - Graceful shutdown and error handling

          ## Docker Image

          ```bash
          docker pull ${{ env.REGISTRY }}/${{ github.repository }}/mcp-server:${{ steps.version.outputs.version }}
          ```

          ## Usage

          ### With Claude Desktop

          Add to `claude_desktop_config.json`:
          ```json
          {
            "mcpServers": {
              "brainwav-cortex": {
                "command": "docker",
                "args": [
                  "run", "--rm", "-i",
                  "${{ env.REGISTRY }}/${{ github.repository }}/mcp-server:${{ steps.version.outputs.version }}"
                ]
              }
            }
          }
          ```

          ### With Codex CLI

          Add to `~/.codex/config.toml`:
          ```toml
          [mcp_servers."brainwav-cortex"]
          type = "stdio"
          command = "docker"
          args = ["run", "--rm", "-i", "${{ env.REGISTRY }}/${{ github.repository }}/mcp-server:${{ steps.version.outputs.version }}"]
          ```

          ## Requirements

          - Docker 20.10+
          - Qdrant vector database (optional, for persistence)
          - NATS server (optional, for events)

          ## Documentation

          - [Docker Deployment Guide](https://github.com/${{ github.repository }}/blob/main/docs/DOCKER-DEPLOYMENT.md)
          - [MCP Server Documentation](https://github.com/${{ github.repository }}/blob/main/packages/mcp-server/README.md)

          ---

          **Co-authored-by**: brAInwav Development Team <dev@brainwav.dev>
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: mcp-server-v${{ steps.version.outputs.version }}
          name: MCP Server v${{ steps.version.outputs.version }}
          body_path: release-notes.md
          files: |
            sbom-mcp-server-${{ steps.version.outputs.version }}.spdx.json
          draft: false
          prerelease: false

# Co-authored-by: brAInwav Development Team <dev@brainwav.dev>
# Co-authored-by: factory-droid[bot] <138933559+factory-droid[bot]@users.noreply.github.com>
