{
  "version": "2.0.0",
  "excludePatterns": [
    "**/node_modules/**",
    "**/dist/**",
    "**/build/**",
    "**/.git/**",
    "**/.next/**",
    "**/.cache/**",
    "**/.mypy_cache/**",
    "**/.ruff_cache/**",
    "**/security_backups/**",
    "**/coverage/**",
    "**/.nyc_output/**",
    "**/tmp/**",
    "**/temp/**",
    "**/.DS_Store",
    "**/Thumbs.db",
    "**/.vscode/settings.json",
    "**/*.log",
    "**/.env*",
    "**/package-lock.json",
    "**/yarn.lock",
    "**/pnpm-lock.yaml",
    "**/.venv*/**",
    "**/venv/**",
    "**/__pycache__/**",
    "**/*.pyc",
    "**/*.pyo",
    "**/.pytest_cache/**",
    "**/.covenv/**",
    "**/htmlcov/**",
    "**/public/**",
    "**/out/**",
    "**/.eng/**",
    "**/.cursor/**",
    "**/.vitest-tmp-*/**",
    "**/dist-test/**",
    "**/.uv-cache/**",
    "**/.memory/logs/**",
    "**/persistence-test-*.db*",
    "**/*.db-shm",
    "**/*.db-wal"
  ],
  "allowedPaths": {
    "apps": [
      "cortex-os"
    ],
    "apps/cortex-os/packages": [
      "agents",
      "mvp",
      "mvp-core",
      "mvp-server"
    ],
    "packages/mvp": [
      "mvp",
      "mvp-core",
      "mvp-group",
      "mvp-server"
    ],
    "packages": [
      "a2a",
      "a2a-services",
      "agents",
      "asbr",
      "contracts",
      "cortex-ai-github",
      "cortex-sec",
      "cortex-semgrep-github",
      "cortex-structure-github",
      "evals",
      "gateway",
      "github",
      "kernel",
      "cortex-mcp",
      "mcp-core",
      "mcp-registry",
      "memories",
      "model-gateway",
      "mvp",
      "mvp-core",
      "mvp-group",
      "mvp-server",
      "observability",
      "orchestration",
      "prp-runner",
      "rag",
      "registry",
      "security",
      "services",
      "simlab",
      "mcp-bridge"
    ],
    "packages/services": [
      "model-gateway",
      "orchestration"
    ],
    "services": [
      "ml-inference",
      "data-pipeline"
    ],
    "libs/typescript": [
      "accessibility",
      "contracts",
      "errors",
      "telemetry",
      "testing",
      "types",
      "utils"
    ],
    "libs/python": [
      "cortex_core",
      "cortex_ml"
    ],
    "tools": [
      "structure-guard",
      "eslint-config",
      "lockfile-sync",
      "schemas",
      "scripts",
      "python"
    ],
    ".cortex": [
      "rules",
      "prompts",
      "audit",
      "commands",
      "context",
      "docs",
      "gates",
      "indexes",
      "library",
      "policy",
      "reports",
      "runbooks",
      "schemas",
      "tooling",
      "tools"
    ],
    "docs": [
      "architecture",
      "reports",
      "analysis"
    ],
    "scripts": [
      "maintenance"
    ],
    "tmp": [
      "build-artifacts"
    ]
  },
  "allowedRootEntries": [
    ".cortex",
    ".eng",
    "apps",
    "packages",
    "libs",
    "services",
    "tools",
    "docs",
    "scripts",
    "tests",
    "config",
    "examples",
    "reports",
    "tmp",
    "bin",
    "infra",
    "k6",
    "ops",
    "data",
    "docker",
    "prisma",
    "project-documentation",
    "python",
    "sbom",
    "schemas",
    "servers",
    "simple-tests",
    "src",
    "patches",
    "comparisons",
    "contracts",
    "logs",
    "tasks",
    "website",
    ".devcontainer",
    ".github",
    ".changeset",
    ".husky",
    ".nx",
    ".vscode",
    ".semgrep",
    ".claude",
    "node_modules",
    "dist",
    "pnpm-workspace.yaml",
    "turbo.json",
    "package.json",
    "tsconfig.json",
    "tsconfig.base.json",
    "tsconfig.eslint.json",
    "pyproject.toml",
    "uv.toml",
    "uv.lock",
    "nx.json",
    "vitest.config.ts",
    "vitest.workspace.ts",
    "vitest.basic.config.ts",
    "vitest.fuzz.config.ts",
    "vitest.policy.config.ts",
    "vitest.simple-tests.config.ts",
    "README.md",
    "LICENSE",
    "NOTICE",
    "SECURITY.md",
    "renovate.json",
    "cliff.toml",
    "commitlint.config.cjs",
    "Justfile",
    "semantic-release.config.js",
    "ecosystem.config.cjs",
    "ecosystem.config.js",
    "biome.json",
    "eslint.config.js",
    "eslint-security.config.js",
    "eslint.scan.config.cjs",
    "eslint-sonar-per-package-index.json",
    "knip.jsonc",
    "performance.config.yaml",
    "license-policy.json",
    "cortex-config.json",
    "devops.plan.schema.json",
    "Makefile",
    "Dockerfile.optimized",
    ".gitignore",
    ".gitattributes",
    ".gitmodules",
    ".dockerignore",
    ".editorconfig",
    ".eslintrc.cjs",
    ".npmrc",
    ".nxignore",
    ".prettierignore",
    ".prettierrc",
    ".prettierrc.json",
    ".mermaidrc",
    ".mise.toml",
    ".tool-versions",
    ".vitestrc",
    ".pre-commit-config.yaml",
    ".pre-commit-config-lite.yaml",
    ".budget.yml",
    ".slo.yml",
    ".dependency-cruiser.js",
    ".dependency-cruiser.mcp.cjs",
    ".graphite_config",
    ".structure-override",
    ".env.example",
    ".env.development.example",
    ".env.staging.example",
    "pnpm-lock.yaml",
    "AGENTS.md",
    "CLAUDE.md",
    "GEMINI.md",
    "QWEN.md",
    "CHANGELOG.md",
    "NAMING_CONVENTIONS.md",
    ".hadolint.yaml",
    ".lighthouserc.js",
    ".lintstagedrc.json",
    ".markdownlintignore",
    ".pre-commit-brainwav-tdd.yaml",
    ".semgrep.yml",
    "playwright.config.ts",
    "CODE_OF_CONDUCT.md",
    "COMMERCIAL-LICENSE.md",
    "CONTRIBUTING.md",
    "GITHUB_APPS_COMMANDS.md",
    "GITHUB_COPILOT_CONFIGURATION.md",
    "README-CORTEX-CLI-UPGRADE.md",
    "WEBHOOK_SECRET_SETUP.md",
    "LLMs.txt",
    ".rgignore",
    ".semgrepignore",
    ".python-version",
    "coverage.xml",
    "sonar-project.properties",
    "CODESTYLE.md",
    "sgconfig.json",
    ".sgignore",
    ".env",
    ".gitleaks.toml",
    ".markdownlint-cli2.yaml",
    "MCP_TDD_PLAN.md",
    "MEMORIES_TDD_PLAN.md",
    "QWEN3_MLX_TDD_PLAN.md",
    "a2a-tdd-plan.md",
    "memory-review-tdd-plan.md",
    "model-gateway-development-plan.md",
    "observability-development-plan.md",
    "orchestration-development-plan.md",
    "packages-agents-dev-plan.md",
    "rag-development-plan.md",
    "flake.nix",
    "mcp_server.js",
    "mcp_server.py",
    "EXEMPTION_NOTICE.md",
    "pnpm-lock.yaml.bak",
    "pnpm-lock.conflicted",
    ".coverage",
    ".syncignore",
    "ports.env",
    "issues.json",
    "performance-history.json",
    "UPSTREAM_REF",
    "review.md",
    "mcpServer.mcp.config.usrlocal.Pieces",
    "data"
  ],
  "filePatterns": {
    "typescript": {
      "required": [
        "package.json",
        "tsconfig.json"
      ],
      "requireOneOf": [
        "src/index.ts",
        "src/index.js",
        "index.ts",
        "src/main.ts",
        "main.ts",
        "src/server.ts",
        "src/cli.ts",
        "src/app.ts",
        "src/**/*.ts"
      ],
      "allowed": [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.mjs",
        "*.cjs",
        "*.json",
        "*.jsonc",
        "**/*.json",
        "**/*.jsonc",
        "project.json",
        "*.md",
        "**/*.md",
        "README.md",
        "LICENSE",
        "CHANGELOG.md",
        "**/*.txt",
        "bin/**/*",
        "cli/**/*",
        "docs/**/*",
        "a2a-examples/**",
        "a2a-python-workers/**",
        "resources/**/*",
        "report/**/*",
        "src/**/*",
        "test-fixtures/**",
        "scripts/**/*",
        "examples/**/*",
        "test/**/*",
        "tests/**/*",
        "__tests__/**/*",
        "**/*.spec.ts",
        "**/*.test.ts",
        "vitest.config.*",
        "tsconfig.*.json",
        "package.json",
        "pnpm-workspace.yaml",
        "*.tsbuildinfo",
        "**/*.map",
        "prisma/**/*",
        "python/**/*",
        "*.prisma",
        "*.d.ts",
        "**/*.d.ts",
        "*.sh",
        "Dockerfile*",
        ".dockerignore",
        "*.yaml",
        "*.yml",
        "**/*.yaml",
        "**/*.yml",
        "*.toml",
        "*.lock",
        "**/*.lock",
        "*.txt",
        "**/*.py",
        "**/*.conf",
        "**/*.diff",
        "**/*.service",
        "infrastructure/**/*",
        "infra/**/*",
        "webui/**/*",
        "public/**/*",
        "static/**/*",
        "templates/**/*",
        "sim/**/*"
      ]
    },
    "python": {
      "required": [
        "pyproject.toml"
      ],
      "requireOneOf": [
        "src/__init__.py",
        "__init__.py",
        "src/main.py",
        "src/**/main.py",
        "main.py",
        "**/__init__.py"
      ],
      "allowed": [
        "*.py",
        "**/*.py",
        "**/*.yaml",
        "**/*.yml",
        "**/*.toml",
        "**/*.json",
        "**/*.jsonc",
        "**/*.md",
        "**/*.txt",
        "**/*.sh",
        "**/*.js",
        "**/*.css",
        "Dockerfile*",
        "uv.lock",
        "security/**",
        "infrastructure/**/*",
        "infra/**/*",
        "webui/**/*",
        "templates/**/*",
        "static/**/*",
        "*.pyi",
        "*.toml",
        "*.md",
        "tests/**/*",
        "**/*_test.py",
        "**/test_*.py"
      ]
    }
  },
  "maxFilesPerChange": 15,
  "overrideRules": {
    "migrationMode": false,
    "overrideRequiresApproval": [
      "@cortex-os/architects"
    ],
    "maxFilesWithOverride": 50
  },
  "protectedFiles": [
    "apps/cortex-os/**",
    "packages/memories/**",
    "packages/orchestration/**",
    "packages/a2a/**",
    "packages/cortex-mcp/**",
    "packages/rag/**",
    "packages/simlab/**"
  ],
  "allowedGlobs": [
    "apps/**",
    "packages/**",
    "external/**",
    "tools/**",
    "docs/**",
    "scripts/**",
    "tests/**",
    "config/**",
    "examples/**",
    "reports/**",
    "tmp/**",
    "bin/**",
    "infra/**",
    "k6/**",
    "ops/**",
    "data/**",
    "docker/**",
    "prisma/**",
    "project-documentation/**",
    "python/**",
    "sbom/**",
    "schemas/**",
    "servers/**",
    "simple-tests/**",
    "src/**",
    "patches/**",
    "comparisons/**",
    "contracts/**",
    "logs/**",
    "libs/**",
    "services/**",
    ".cortex/**",
    ".github/**",
    ".changeset/**",
    ".husky/**",
    ".nx/**",
    ".vscode/**",
    ".semgrep/**",
    ".claude/**",
    "node_modules/**",
    "dist/**",
    "tsconfig*.json",
    "package.json",
    "pnpm-workspace.yaml",
    "vitest*.config.ts",
    "Dockerfile*",
    "Makefile",
    "LICENSE",
    "NOTICE",
    "*.md",
    "*.txt",
    "*.json",
    "*.jsonc",
    "*.js",
    "*.mjs",
    "*.cjs",
    "*.ts",
    "*.py",
    "*.yaml",
    "*.yml",
    "*.toml",
    "*.lock",
    ".gitignore",
    ".gitattributes",
    ".gitmodules",
    ".dockerignore",
    ".editorconfig",
    ".mermaidrc",
    ".npmrc",
    ".nxignore",
    ".prettierignore",
    ".structure-override",
    ".tool-versions",
    ".vitestrc",
    ".graphite_config",
    ".env*",
    "knip.jsonc",
    "**/coverage/**",
    "**/target/**",
    "**/.turbo/**",
    "**/.vite/**",
    "coverage.xml",
    "sonar-project.properties",
    "flake.nix",
    "pnpm-lock.yaml.bak",
    ".markdownlintignore",
    ".prettierrc",
    "tasks/**/*",
    "website/**/*",
    ".devcontainer/**/*",
    "..bfg-report/**/*",
    ".pnpm-store/**/*"
  ],
  "deniedGlobs": [
    "**/*.secret",
    "**/*.pem",
    "**/*.key",
    "**/.env.local",
    "**/.orbstack/**",
    "**/id_rsa",
    "**/id_dsa",
    "**/id_ecdsa",
    "**/id_ed25519"
  ],
  "importRules": {
    "bannedPatterns": [
      "^@cortex-os/.*/dist/.*$",
      "^@cortex-os/.*/node_modules/.*$",
      "^packages/.*/packages/.*"
    ],
    "allowedCrossPkgImports": [
      "@cortex-os/contracts**",
      "@cortex-os/types**",
      "@cortex-os/utils**",
      "@cortex-os/telemetry**",
      "@cortex-os/testing**",
      "@cortex-os/a2a-contracts**",
      "@cortex-os/a2a-core**",
      "@cortex-os/a2a-common**",
      "@cortex-os/a2a-transport**",
      "@cortex-os/a2a-events**",
      "@cortex-os/observability**",
      "@cortex-os/mcp-core**",
      "@cortex-os/memories**",
      "@cortex-os/kernel**",
      "@cortex-os/prp-runner**",
      "@cortex-os/a2a**",
      "@cortex-os/lib**",
      "@cortex-os/rag**",
      "@cortex-os/rag-embed**",
      "@cortex-os/rag-store**",
      "@cortex-os/simlab**",
      "@cortex-os/agents**",
      "@cortex-os/mvp-core**",
      "@cortex-os/orchestration**",
      "@cortex-os/cortex-sec**",
      "@cortex-os/agent-toolkit**",
      "@cortex-os/mcp-registry**",
      "@cortex-os/model-gateway**",
      "@cortex-os/prompts**",
      "@cortex-os/hooks**",
      "@cortex-os/policy**",
      "@cortex-os/asbr-policy**",
      "@cortex-os/asbr-schemas**",
      "@cortex-os/protocol**",
      "@cortex-os/patchkit**",
      "@cortex-os/executor-spool**",
      "@cortex-os/stream-protocol**",
      "@cortex-os/stream-client**",
      "@cortex-os/history-store**",
      "@cortex-os/evidence-runner**",
      "@cortex-os/lib**",
      "@cortex-os/database-types**",
      "@cortex-os/proof-artifacts**",
      "@cortex-os/mcp**",
      "@cortex-os/prp-types**",
      "@cortex-os/memory-core**",
      "@cortex-os/tool-spec**",
      "@cortex-os/agent-contracts**",
      "@cortex-os/commands**",
      "@cortex-os/security**",
      "@cortex-os/tdd-coach**"
    ]
  },
  "enforcement": {
    "blockUnknownRoots": true,
    "blockUnknownPaths": true
  },
  "testRequirements": {
    "minCoverage": 70,
    "requiredTestDirs": [
      "tests",
      "test",
      "__tests__",
      "src/**/*.spec.ts",
      "src/**/*.test.ts"
    ],
    "excludeFromCoverage": [
      "*.config.*",
      "*.setup.*",
      "*.mock.*",
      "*.d.ts"
    ]
  }
}